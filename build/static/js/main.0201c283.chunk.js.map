{"version":3,"sources":["counter-button.js","App.js","reportWebVitals.js","index.js"],"names":["CounterButton","props","start","lowerLimit","upperLimit","useState","counter","setCounter","className","onClick","Number","type","value","max","min","onChange","e","target","onBlur","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA+BeA,MA5Bf,SAAwBC,GAAQ,IAAD,EAC4BA,EAA/CC,aADmB,MACb,EADa,IAC4BD,EAAtCE,kBADU,MACG,EADH,IAC4BF,EAAtBG,kBADN,MACmB,IADnB,IAEGC,mBAASH,GAFZ,mBAEpBI,EAFoB,KAEXC,EAFW,KAmB/B,OACA,sBAAKC,UAAU,2BAAf,UACI,wBAAQA,UAAU,mBAAmBC,QAjBnB,WACXH,EAAQ,GAAKI,OAAOP,IACnBI,EAAWD,EAAQ,IAe3B,eACA,uBAAOK,KAAK,SAASC,MAAON,EAASO,IAAKT,EAAYU,IAAKX,EAAYK,UAAU,YAAYO,SAAU,SAACC,GAR7E,IAACJ,KAQuGI,EAAEC,OAAOL,QAP5HR,GACRG,EAAWG,OAAOE,KAM2HM,OAAQ,SAACF,GAAYA,EAAEC,OAAOL,OAAOL,EAAWL,MACrM,wBAAQM,UAAU,mBAAmBC,QAdnB,WACXH,EAAQ,GAAKI,OAAON,IACnBG,EAAWD,EAAQ,IAY3B,mBCZWa,MAZf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,EAAD,WCKKY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0201c283.chunk.js","sourcesContent":["import { useState } from 'react'\nimport './counter-button.css'\n\nfunction CounterButton (props) {\n    const { start=1, lowerLimit = 0, upperLimit = 1000 } = props\n    const [counter, setCounter] = useState(start)\n    \n    const decrement = () => {\n        if(counter-1 >= Number(lowerLimit)) {\n            setCounter(counter-1)\n        }\n    }\n    const increment = () => {\n        if(counter+1 <= Number(upperLimit)) {\n            setCounter(counter+1)\n        }\n    }\n    const changeCounterValue = (value) => {\n        if(value <= upperLimit) {\n            setCounter(Number(value))\n        }\n    }\nreturn (\n<div className=\"counter-button-container\">\n    <button className=\"decrement-button\" onClick={decrement}>-</button>\n    <input type=\"number\" value={counter} max={upperLimit} min={lowerLimit} className=\"input-box\" onChange={(e) => { changeCounterValue(e.target.value)}} onBlur={(e) => { if(!e.target.value) setCounter(start);}}/>\n    <button className=\"increment-button\" onClick={increment}>+</button>\n</div>\n)\n}\n\nexport default CounterButton\n","import './App.css';\nimport CounterButton from './counter-button'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"counter-button-consumer\">\n          <CounterButton />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}